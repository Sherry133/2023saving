/* Button */

input[type="submit"],
input[type="reset"],
input[type="button"],
button,
.button {
	@include vendor('appearance', 'none');
	@include vendor('transition', 'background-color #{_duration(transition)} ease-in-out, color #{_duration(transition)} ease-in-out');
	border-radius: _size(border-radius);
	border: 0;
	cursor: pointer;
	display: inline-block;
	// background-size: cover;
	font-size: 0.8em;
	font-weight: _font(weight-bold);
	height: 3.5em;
	line-height: 3.5em;
	padding: 0 2.25em;
	text-align: center;
	text-decoration: none;
	text-transform: uppercase;
	white-space: nowrap;

	&.icon {
		padding-left: 1.35em;

		&:before {
			font-size: 0.95em;
			margin-right: 0.5em;
		}
	}

	&.fit {
		width: 100%;
	}

	&.small {
		font-size: 0.6em;
	}

	&.large {
		font-size: .95em;



		&.disabled,
		&:disabled {
			@include vendor('pointer-events', 'none');
			opacity: 0.25;
		}

		@include breakpoint('<=small') {
			padding: 0;

		}

		@media (min-width: 737px) and (max-width: 981px) {
			.grid-container {
				display: grid;
				grid-template-columns: 1fr 1fr;
				grid-template-areas: "button"
					"button";
			}

			// @include breakpoint('<=medium') {
			// .button {
			// 	grid-area: button;
			// 	min-width: 100%;
			// }

		}
	}

	@mixin color-button($p: null) {
		$highlight: _palette($p, highlight);

		input[type="submit"],
		input[type="reset"],
		input[type="button"],
		button,
		.button {
			background-color: #fff;
			box-shadow: inset 0 0 0 _size(border-width) _palette($p, border);
			color: _palette($p, fg-bold) !important;


			&:hover,
			&:focus {
				background-color: _palette($p, border-bg);
			}

			&:active {
				background-color: opacity (_palette($p, border-bg), 0.1);
			}

			&.icon {
				&:before {
					color: _palette($p, fg-light);
				}
			}

			&.primary {
				box-shadow: none;
				width: 100%;

				//this means if background is white, text is red as is the circle (icon) behind the people photos

				@if $p==$highlight {
					background-color: _palette($p, fg-bold);

					color: _palette($p, bg) !important;

					&.icon {
						&:before {
							color: _palette($p, bg) !important;
						}
					}
				}

				//Otherwise the background is red and the text is white.
				@else {
					background-color: _palette($highlight, bg);
					color: _palette($highlight, fg-bold) !important;

					&.icon {
						&:before {
							color: _palette($highlight, fg-bold) !important;
						}
					}

					&:hover,
					&:focus {
						background-color: lighten(_palette($highlight, bg), 5);
						// background-color: black;
					}

					&:active {
						background-color: darken(_palette($highlight, bg), 5);
					}
				}
			}
		}
	}

	@include color-button;
}